//! Layouts
$screen-3xl: 1792px;
$screen-2xl: 1472px;
$screen-xl: 1280px;
$screen-lg: 960px;
$screen-md: 768px;
$screen-sm: 576px;
$screen-xs: 480px;

@mixin content-spacing {
	padding-left: 2rem;
	padding-right: 2rem;
	@media screen and (max-width: $screen-lg) {
		padding-left: 1.5rem;
		padding-right: 1.5rem;
	}
	@media screen and (max-width: $screen-md) {
		padding-left: 1rem;
		padding-right: 1rem;
	}
}
@mixin content-gap {
	grid-gap: 2rem;
	@media screen and (max-width: $screen-lg) {
		grid-gap: 1.5rem;
	}
	@media screen and (max-width: $screen-md) {
		grid-gap: 1rem;
	}
}

//! Shadows
$shadow-box-focus-hover: 0 0 0 4px rgba(23, 102, 166, 0.25), 00 2px 4px rgba(0, 0, 0, 0.04),
	0 4px 8px rgba(0, 0, 0, 0.06), 0 8px 16px rgba(0, 0, 0, 0.08);
$shadow-box-focus: 0 0 0 4px rgba(23, 102, 166, 0.25);
$shadow-box-soft: 0 2px 4px rgba(0, 0, 0, 0.02), 0 4px 8px rgba(0, 0, 0, 0.04);
$shadow-box-soft-hover: 0 2px 4px rgba(0, 0, 0, 0.04), 0 4px 8px rgba(0, 0, 0, 0.08);
$shadow-box: 0 2px 4px rgba(0, 0, 0, 0.02), 0 4px 8px rgba(0, 0, 0, 0.04), 0 8px 16px rgba(0, 0, 0, 0.08);
$shadow-box-hover: 0 2px 4px rgba(0, 0, 0, 0.08), 0 4px 8px rgba(0, 0, 0, 0.12), 0 8px 16px rgba(0, 0, 0, 0.16);
$shadow-box-hard: 0 2px 4px rgba(0, 0, 0, 0.12), 0 4px 8px rgba(0, 0, 0, 0.16), 0 8px 16px rgba(0, 0, 0, 0.24);

//! Colors
:root {
	--color-system-values: 0, 0%, 4%;
	--color-system-10: hsla(var(--color-system-values), 1);
	--color-system-08: hsla(var(--color-system-values), 0.8);
	--color-system-06: hsla(var(--color-system-values), 0.5);
	--color-system-04: hsla(var(--color-system-values), 0.25);
	--color-system-02: hsla(var(--color-system-values), 0.08);
	--color-system-00: hsla(var(--color-system-values), 0);

	--color-system-invert-values: 0, 0%, 100%;
	--color-system-invert-10: hsla(var(--color-system-invert-values), 1);
	--color-system-invert-08: hsla(var(--color-system-invert-values), 0.8);
	--color-system-invert-06: hsla(var(--color-system-invert-values), 0.5);
	--color-system-invert-04: hsla(var(--color-system-invert-values), 0.25);
	--color-system-invert-02: hsla(var(--color-system-invert-values), 0.08);
	--color-system-invert-00: hsla(var(--color-system-invert-values), 0);

	--color-primary-super-dark: hsl(78, 80%, 19%);
	--color-primary-extra-dark: hsl(78, 80%, 27%);
	--color-primary-dark: hsl(78, 80%, 31%);
	--color-primary-main: hsl(78, 80%, 38%);
	--color-primary-light: hsl(78, 70%, 45%);
	--color-primary-extra-light: hsl(78, 60%, 55%);
	--color-primary-super-light: hsl(78, 55%, 65%);
}
$color-system-1-full: hsla(var(--color-system-values), 1);
$color-system-2-dimmed: hsla(var(--color-system-values), 0.8);
$color-system-3-dim: hsla(var(--color-system-values), 0.25);
$color-system-4-weak: hsla(var(--color-system-values), 0.08);

$color-system-invert-1-full: var(--color-system-invert);
$color-system-invert-2-dimmed: hsla(var(--color-system-invert-values), 0.8);
$color-system-invert-3-dim: hsla(var(--color-system-invert-values), 0.25);
$color-system-invert-4-weak: hsla(var(--color-system-invert-values), 0.08);

$color-primary: #1a1a1a;
$color-success: green;
$color-caution: red;
$color-link: #1766a6;
$color-link-active: #0f0e69;

//! Interface Size
body,
html {
	--header-height: 4rem;
}
$header-height: var(--header-height);
$border-radius: 0.25em;
$box-height: 160px;
$box-height-overlay: 40px;

//! Grad
@mixin linear-gradient($deg, $clr, $int, $end) {
	background: linear-gradient($deg, rgba($clr, $int) 0%, rgba($clr, 0) $end);
}

// ! State styles
@mixin hover-anim {
	transition: box-shadow ease-in-out 0.15s, transform ease-in-out 0.35s;
	&:hover {
		transform: translateY(-1px);
	}
	&:active {
		transform: unset;
	}
}
@mixin inline($color: $color-system-2-dimmed, $width: 1px, $style: solid) {
	position: relative;
	// ðŸ‘† Requires parent element to be 'position: relative;'
	&:after {
		z-index: 0;
		content: "";
		transition: all 0.25s; // same as 'pep-btn' @mixin
		display: block;
		position: absolute;
		inset: 0;
		border-radius: inherit;
		border: $width $style $color;
	}
}

@mixin button-spacing {
	padding: 0.7em 1em;
}

@mixin state-weak {
	display: flex;
	align-items: center;
	border-radius: $border-radius;
	padding: 0.5em 1em;
	align-self: center;
	background-color: $color-system-4-weak;
	color: $color-system-1-full;
	transition: box-shadow ease-in-out 0.15s, background-color ease-in-out 0.35s;
	svg {
		font-size: 100%;
	}
	&:hover {
		background-color: $color-system-3-dim;
	}
	&:active,
	&:focus-visible {
		box-shadow: $shadow-box-focus;
	}
	.start-icon {
		margin-inline-end: 0.25em;
	}
	.end-icon {
		margin-inline-start: 0.25em;
	}
}
@mixin state-weak-invert {
	@include state-weak;
	background-color: $color-system-invert-3-dim;
	&:hover {
		background-color: $color-system-invert-2-dimmed;
	}
}

@mixin state-regular {
	@include inline;
	@include hover-anim;
	font-size: var(--font-size-01);
	background: white;
	border-radius: $border-radius;
	box-shadow: $shadow-box-soft;
	transition: all ease-in-out 0.15s;
	&:hover {
		@include inline($color-system-1-full);
		box-shadow: $shadow-box-soft-hover;
	}
	&:active,
	&:focus-visible {
		box-shadow: $shadow-box-focus;
		// &::after {
		// 	content: "";
		// 	position: absolute;
		// 	inset: 0;
		// 	overflow: visible !important;
		// }
	}
}
@mixin state-strong {
	@include hover-anim;
	font-size: var(--font-size-01);
	color: var(--color-system-invert-10);
	background-color: var(--color-system-10);
	border-radius: $border-radius;
	box-shadow: $shadow-box;
	font-weight: 600;
	// transition: box-shadow ease-in-out 0.15s, transform ease-in-out 0.35s;
	&:hover {
		box-shadow: $shadow-box-hover;
		// transform: translateY(-1px);
	}
	&:active,
	&:focus-visible {
		box-shadow: $shadow-box-focus;
	}
}
@mixin clickable-image-base {
	background-repeat: no-repeat;
	background-position: center;
	position: relative;
	background-color: white;
	cursor: pointer;
	box-shadow: 0;
	border-radius: $border-radius;
	transition: box-shadow ease-in-out 0.2s, transform ease-in-out 0.3s;
	&:hover {
		box-shadow: $shadow-box-hover;
		transform: scale(1.015);
	}
	&:active,
	&:focus-visible {
		box-shadow: $shadow-box-focus-hover;
	}
}

@mixin hidden-on($size) {
	@media screen and (max-width: $size) {
		display: none !important;
	}
}

@mixin shown-on($size) {
	@media screen and (min-width: $size) {
		display: none !important;
	}
}
